<project default="dist" name="onionoo" basedir=".">

  <property name="onionoo.protocol.version" value="3.1"/>
  <property name="release.version"
            value="${onionoo.protocol.version}.0"/>
  <property name="descriptorversion" value="1.2.0"/>
  <property name="javasources" value="src/main/java"/>
  <property name="tests" value="src/test/java"/>
  <property name="generated" value="generated/"/>
  <property name="classes" value="classes"/>
  <property name="testresources" value="src/test/resources/"/>
  <property name="dist" value="dist"/>
  <property name="docs" value="${generated}/javadoc/"/>
  <property name="libs" value="lib"/>
  <property name="config" value="etc"/>
  <property name="webxmlfile" value="${config}/web.xml"/>
  <property name="contextxmltemplate"
            value="${config}/context.xml.template"/>
  <property name="contextxml" value="${config}/context.xml"/>
  <property name="webxmltemplate"
            value="${config}/web.xml.template"/>
  <property name="webxml" value="${config}/web.xml"/>
  <property name="warfile"
            value="${dist}/onionoo-${release.version}.war"/>
  <property name="onionoo.jarfile"
            value="${dist}/onionoo-${release.version}.jar"/>
  <property name="source-and-target-java-version" value="1.7" />

  <patternset id="runtime" >
    <include name="descriptor-${descriptorversion}.jar"/>
    <include name="commons-codec-1.6.jar"/>
    <include name="commons-compress-1.4.1.jar"/>
    <include name="commons-lang3-3.1.jar"/>
    <include name="gson-2.1.jar"/>
    <include name="logback-classic-1.0.4.jar"/>
    <include name="logback-core-1.0.4.jar"/>
    <include name="slf4j-api-1.6.5.jar"/>
  </patternset>

  <patternset id="web" >
      <include name="servlet-api-3.0.jar"/>
      <include name="jetty8-server-8.1.3.v20120416.jar"/>
      <include name="jetty8-servlets-8.1.3.v20120416.jar"/>
      <include name="jetty8-servlet-8.1.3.v20120416.jar"/>
      <include name="jetty8-util-8.1.3.v20120416.jar"/>
      <include name="jetty8-http-8.1.3.v20120416.jar"/>
      <include name="jetty8-io-8.1.3.v20120416.jar"/>
      <include name="jetty8-xml-8.1.3.v20120416.jar"/>
      <include name="jetty8-webapp-8.1.3.v20120416.jar"/>
      <include name="jetty8-continuation-8.1.3.v20120416.jar"/>
      <include name="jetty8-security-8.1.3.v20120416.jar"/>
  </patternset>

  <patternset id="test" >
    <include name="junit4-4.10.jar"/>
    <include name="hamcrest-core-1.3.jar"/>
  </patternset>

  <path id="classpath">
    <pathelement path="${classes}"/>
    <fileset dir="${libs}">
      <patternset refid="runtime" />
      <patternset refid="web" />
    </fileset>
    <fileset dir="${config}">
      <include name="logback.xml,jetty.xml"/>
    </fileset>
  </path>

  <path id="testclasspath">
    <path refid="classpath" />
    <fileset dir="${libs}">
      <patternset refid="runtime" />
      <patternset refid="test" />
      <patternset refid="web" />
    </fileset>
  </path>

  <path id="checkstyle.classpath" >
    <fileset dir="${libs}">
      <include name="checkstyle-6.17-all.jar" />
    </fileset>
  </path>

  <target name="init">
    <copy file="${contextxmltemplate}" tofile="${contextxml}"/>
    <copy file="${webxmltemplate}" tofile="${webxml}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${docs}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${generated}"/>
  </target>

  <target name="clean" >
    <delete includeEmptyDirs="true">
      <fileset dir="${classes}" defaultexcludes="false" includes="**" />
      <fileset dir="${dist}" defaultexcludes="false" includes="**" />
    </delete>
  </target>

  <target name="compile"
          depends="init">
    <javac destdir="${classes}"
           srcdir="${javasources}"
           source="${source-and-target-java-version}"
           target="${source-and-target-java-version}"
           debug="true"
           deprecation="true"
           optimize="false"
           failonerror="true"
           includeantruntime="false">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="docs" depends="init">
    <javadoc destdir="${docs}"
             footer="&amp;copy; 2016 The Tor Project"
             doctitle="Onionoo Documentation"
             use="true"
             windowtitle="Onionoo Documentation">
      <classpath refid="classpath"/>
      <fileset dir="${javasources}/" includes="**/*.java" />
    </javadoc>
  </target>

  <target name="test" depends="compile">
    <javac destdir="${classes}"
           srcdir="${tests}"
           source="${source-and-target-java-version}"
           target="${source-and-target-java-version}"
           debug="true"
           deprecation="true"
           optimize="false"
           failonerror="true"
           includeantruntime="false">
      <classpath refid="testclasspath" />
    </javac>
    <junit fork="true" haltonfailure="true" printsummary="off">
      <classpath refid="testclasspath" />
      <formatter type="plain" usefile="false"/>
      <batchtest>
        <fileset dir="${classes}"
                 includes="**/*Test.class"/>
      </batchtest>
    </junit>
  </target>

  <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties">
    <classpath refid="checkstyle.classpath" />
  </taskdef>
  <target name="checks" depends="compile">
    <checkstyle config="${testresources}/metrics_checks.xml">
      <fileset dir="${javasources}"
               includes="**/*.java" />
      <classpath>
        <path refid="classpath" />
        <path refid="checkstyle.classpath" />
      </classpath>
      <formatter type="plain"
                 toFile="${generated}/checkstyle_report.txt"/>
    </checkstyle>
  </target>

  <target name="war"
          depends="compile">
    <war destfile="${warfile}"
         webxml="${webxmlfile}">
      <fileset dir="web"/>
      <restrict>
        <not>
          <name name="META-INF/*" />
        </not>
        <archives>
          <zips>
            <fileset dir="${libs}">
              <patternset refid="runtime" />
              <patternset refid="web" />
            </fileset>
          </zips>
        </archives>
      </restrict>
      <fileset dir="${classes}"
               includes="**/*"
               excludes="**/Test*.class"/>
      <fileset dir="${config}" includes="jetty.xml" />
      <zipfileset dir="${config}"
                  prefix=""
                  includes="logback.xml"/>
      <zipfileset dir="${config}"
                  prefix="WEB-INF/classes"
                  includes="logback.xml"/>
      <metainf dir="${config}"
               includes="context.xml"/>
      <manifest>
        <attribute name="Created-By" value="The Tor Project" />
        <attribute name="Implementation-Title" value="Onionoo Server"/>
        <attribute name="Implementation-Version"
                   value="${release.version}"/>
        <attribute name="Onionoo-Protocol-Version"
                   value="${onionoo.protocol.version}" />
        <attribute name="Main-Class"
                   value="org.torproject.onionoo.server.ServerMain" />
      </manifest>
    </war>
  </target>

  <target name="jar" depends="compile">
    <jar destfile="${onionoo.jarfile}"
         basedir="${classes}">
      <restrict>
        <not>
          <name name="META-INF/*" />
        </not>
        <archives>
          <zips>
            <fileset dir="${libs}">
              <patternset refid="runtime" />
            </fileset>
          </zips>
        </archives>
      </restrict>
      <fileset dir="${classes}"
               excludes="org/torproject/onionoo/server/" />
      <fileset dir="${config}" includes="logback.xml" />
      <exclude name="**/Test*.class"/>
      <manifest>
        <attribute name="Created-By" value="The Tor Project" />
        <attribute name="Implementation-Title" value="Onionoo Server"/>
        <attribute name="Implementation-Version"
                   value="${release.version}"/>
        <attribute name="Onionoo-Protocol-Version"
                   value="${onionoo.protocol.version}" />
        <attribute name="Main-Class"
                   value="org.torproject.onionoo.cron.Main" />
      </manifest>
    </jar>
  </target>

  <target name="dist" depends="test, war, jar"/>

</project>

