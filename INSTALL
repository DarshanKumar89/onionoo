Clone the Onionoo server repository
-----------------------------------

Create working directory /srv/onionoo/, make it writable for the metrics
user, and clone the Onionoo server repository into it.  Commands prefixed
with # are meant to be run by root, commands with $ by user metrics:

# mkdir /srv/onionoo
# chown metrics:metrics /srv/onionoo
$ git clone https://git.torproject.org/onionoo.git /srv/onionoo/
$ cd /srv/onionoo


Install Java 1.7 or higher, ant 1.8 or higher, and Tomcat 6
-----------------------------------------------------------

$ javac -version
javac 1.7.0_65

$ ant -version
Apache Ant version 1.8.0 compiled on March 11 2010


Provide required .jar files
---------------------------

Download .jar files listed in the build.xml classpath.  Onionoo usually
uses Debian stable provided libraries; see vagrant/bootstrap.sh for Debian
package names.  If you download .jar files elsewhere, please edit the
corresponding paths in build.xml.

Attempt to compile the Java sources to make sure that everything works
correctly:

$ ant compile


Download GeoIP and ASN database files
-------------------------------------

Onionoo uses an IP-to-city database and an IP-to-ASN database to provide
additional information about a relay's location.

First, create the geoip/ directory and change to it:

$ mkdir -p geoip
$ cd geoip/

Download the most recent MaxMind GeoLite2 City database and unzip it in
the current directory, junking paths:

$ wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City-CSV.zip
$ unzip -j GeoLite2-City-CSV.zip

Download the most recent MaxMind GeoLite ASN database file and unzip it in
the current directory:

$ wget https://www.maxmind.com/download/geoip/database/asnum/GeoIPASNum2.zip
$ unzip GeoIPASNum2.zip

Change back to the root working directory:

$ cd ../


Test the hourly data processing process
---------------------------------------

Run the data processing process that will afterwards be run once per hour.
Currently, memory is set to 4G.  If you have more or less RAM to spare,
change the value for the maxmemory.value property near the top of the
build.xml file.
The initial run may take a while:

$ ant run


Set up an hourly cronjob
------------------------

Check the contents of bin/update.sh and whether they match the commands
that worked for you.  Once they do, add a crontab line similar to this
one:

15 * * * * cd /srv/onionoo/ && bin/update.sh


Configure Tomcat
----------------

The following file may be a useful Tomcat configuration file.
Make changes according to your server setup, i.e. replace ${your-host-ip}
with your ip address and the like (ports, lognames and paths).
Put it in /etc/tomcat6/server.xml:

<Server port="8005" shutdown="SHUTDOWN">
  <Service name="Catalina">
    <Connector port="8080" maxHttpHeaderSize="8192"
               maxThreads="150" minSpareThreads="25" maxSpareThreads="75"
               enableLookups="false" redirectPort="8443" acceptCount="100"
               connectionTimeout="20000" disableUploadTimeout="true"
               compression="on" compressionMinSize="2048"
               noCompressionUserAgents="gozilla, traviata"
               compressableMimeType="text/html,application/json" />
    <Engine name="Catalina" defaultHost="${your-host-ip}">
      <Host name="${your-host-ip}" appBase="webapps"
            unpackWARs="true" autoDeploy="true"
            xmlValidation="false" xmlNamespaceAware="false">
        <Alias>${your-host-ip}</Alias>
        <Valve className="org.apache.catalina.valves.AccessLogValve"
               directory="logs" prefix="onionoo_access_log." suffix=".txt"
               pattern="%l %u %t %r %s %b" resolveHosts="false"/>
      </Host>
    </Engine>
  </Service>
</Server>

It may also be necessary to increase Tomcat's maximum heap space.  Do this
by editing JAVA_OPTS in /etc/default/tomcat6 and change "-Xmx128m" to
"-Xmx512m".


Deploy the Tomcat application
-----------------------------

Create a .war file:

$ ant war

Create a symbolic link to the .war file, so that non-root users can
re-deploy the application in the future.  Run the following commands as
root:

# cd /var/lib/tomcat6/webapps/
# ln -s /srv/onionoo/onionoo.war onionoo.war

The Onionoo server should now be available at
http://localhost:8080/onionoo/.

